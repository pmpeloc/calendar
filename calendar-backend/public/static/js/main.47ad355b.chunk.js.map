{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","useDispatch","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowAdd","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthtenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47ad355b.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseURL}/${endpoint}`;\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n};\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseURL}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n};\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add New',\r\n    eventClearActiveEvent: '[event] Clear Active Event',\r\n    eventUpdated: '[event] Event Updated',\r\n    eventDeleted: '[event] Event Deleted',\r\n    eventLoaded: '[event] Event Loaded',\r\n    \r\n    authCheckingFinish: '[auth] Checking finish',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start registre',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map(e => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate()\r\n    }));\r\n};","import Swal from 'sweetalert2';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid, name } = getState().auth;\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                console.log(event);\r\n                dispatch(eventAddNew(event));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);            \r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdated = (event) => {\r\n    return async (dispatch) => {\r\n        try {            \r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {            \r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const  eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.eventos);                        \r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n});","import Swal from 'sweetalert2';\r\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { eventLogout } from './events';\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n        \r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST');\r\n        const body = await resp.json();\r\n        \r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n        \r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {            \r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n};\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user \r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n};\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n});","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n    \r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'misael@mail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Pablo',\r\n        rEmail: 'pablo@mail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();        \r\n        dispatch(startLogin(lEmail, lPassword));\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (rPassword1 !== rPassword2) {\r\n            Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        } else {\r\n            dispatch(startRegister(rEmail, rPassword1, rName));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"                \r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>            \r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    \r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span> - { user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from \"react\";\r\nimport moment from 'moment';\r\nimport Modal from \"react-modal\";\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from \"../../actions/events\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowAdd = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowAdd.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n  const { modalOpen } = useSelector( state => state.ui );\r\n  const { activeEvent } = useSelector( state => state.calendar );\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const [dateStart, setDateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(nowAdd.toDate());\r\n  const [titleValid, setTitleValid] = useState(true);\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n\r\n  const { notes, title, start, end } = formValues;\r\n\r\n  useEffect(() => {\r\n    if (activeEvent) {\r\n        setFormValues(activeEvent);\r\n    } else {\r\n        setFormValues(initEvent);\r\n    }\r\n  }, [activeEvent, setFormValues]);\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n        ...formValues,\r\n        [target.name]: target.value\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActiveEvent());\r\n    setFormValues(initEvent);\r\n  };\r\n\r\n  const handleStartDateChange = (e) => {\r\n    setDateStart(e);\r\n    setFormValues({\r\n        ...formValues,\r\n        start: e\r\n    });\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n        ...formValues,\r\n        end: e\r\n    });\r\n  };\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault(); \r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n        return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');    \r\n    }\r\n\r\n    if (title.trim().length < 2) {\r\n        return setTitleValid(false);\r\n    }\r\n    \r\n    if (activeEvent) {\r\n        dispatch(eventStartUpdated(formValues))\r\n    } else {\r\n        dispatch(eventStartAddNew(formValues));\r\n    }\r\n\r\n    setTitleValid(true);\r\n    closeModal();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      //   onAfterOpen={afterOpenModal}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n    >\r\n      <h1> {(activeEvent) ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n      <hr />\r\n      <form \r\n        className=\"container\"\r\n        onSubmit={handleSubmitForm}\r\n      >\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker \r\n            onChange={handleStartDateChange}\r\n            value={dateStart}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker \r\n            onChange={handleEndDateChange}\r\n            value={dateEnd}\r\n            minDate={dateStart}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Una descripción corta\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Información adicional\r\n          </small>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventClearActiveEvent } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal());\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch]);\r\n    \r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));        \r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {              \r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id) ? '#367cf7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <Navbar />\r\n           <Calendar\r\n            localizer={localizer}\r\n            events={events}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            messages={messages}\r\n            eventPropGetter={eventStyleGetter}\r\n            onDoubleClickEvent={onDoubleClick}\r\n            onSelectEvent={onSelectEvent}\r\n            onView={onViewChange}\r\n            onSelectSlot={onSelectSlot}\r\n            selectable={true}\r\n            view={lastView}\r\n            components={{\r\n                event: CalendarEvent\r\n            }}\r\n           />\r\n           <AddNewFab />           \r\n           { activeEvent && <DeleteEventFab /> }\r\n           <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthtenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {    \r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthtenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthtenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthtenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (!isAuthtenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthtenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>                    \r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={LoginScreen}\r\n                        isAuthtenticated={!!uid}\r\n                    />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={CalendarScreen} \r\n                        isAuthtenticated={!!uid}\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,                \r\n                ...action.payload,\r\n                checking: false\r\n            }   \r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }   \r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }  \r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: sadwe5432asdw,\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Misael'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) { \r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            } \r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }  \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }  \r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            } \r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            } \r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n           return {\r\n                ...state,\r\n                modalOpen: true\r\n           }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n});","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './router/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}